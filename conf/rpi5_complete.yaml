# 라즈베리파이 5 최적화 모델 훈련 설정 (완전판)
# Light-32-Depth4 모델 구성 (RTF=0.834 달성)

defaults:
  - _self_
  - dset: debug
  - hydra/job_logging: colorlog
  - hydra/hydra_logging: colorlog

# Dataset related
sample_rate: 16000
segment: 4
stride: 1    # in seconds, how much to stride between training examples
pad: true   # if training sample is too short, pad it

# Dataset Augmentation
remix: false   # remix noise and clean
bandmask: 0.1   # drop at most this fraction of freqs in mel scale
shift: 4000    # random shift, number of samples
shift_same: true   # shift noise and clean by the same amount
revecho: 0  # add reverb like augment

# Logging and printing, and does not impact training
num_prints: 5
device: cpu  # macOS/RPi5 CPU 최적화
num_workers: 2  # CPU 환경에 맞게 축소
verbose: 1
show: 0   # just show the model and its size and exit

# Checkpointing, by default automatically load last checkpoint
checkpoint: true
continue_from: '' # Path the a checkpoint.th file to start from.
                  # this is not used in the name of the experiment!
                  # so use a dummy=something not to mixup experiments.
continue_best: false  # continue from best, not last state if continue_from is set.
continue_pretrained:   # use either dns48, dns64 or master64 to fine tune from pretrained-model
restart: false # Ignore existing checkpoints
checkpoint_file: checkpoint.th
best_file: best.th  # will contain only best model at any point
history_file: history.json
samples_dir: samples
save_again: false  # if true, only load checkpoint and save again, useful to reexport best.th

# Other stuff
seed: 2036
dummy: light32d4_debug  # 실험 식별용

# Evaluation stuff
pesq: false # PESQ 비활성화 (macOS 호환성)
eval_every: 5  # compute test metrics every so epochs
dry: 0.  # dry/wet knob value at eval
streaming: false  # use streaming evaluation for Demucs

# Optimization related
optim: adam
lr: 3e-4
beta2: 0.999
loss: l1
stft_loss: false  # 간소화
stft_sc_factor: .5
stft_mag_factor: .5
epochs: 20  # 기본 에포크 수
batch_size: 16  # CPU 환경에 맞게 축소

# Models - 라즈베리파이 5 최적화 모델
model: demucs # either demucs or dwave
demucs:
  chin: 1
  chout: 1
  hidden: 32          # 48→32 (핵심 최적화)
  max_hidden: 128     # 10000→128 (메모리 최적화)
  causal: true        # 실시간 처리 필수
  glu: false          # true→false (파라미터 50% 감소)
  depth: 4            # 5→4 감소
  kernel_size: 8      # 기본값 유지
  stride: 4           # 기본값 유지
  normalize: true
  resample: 2         # 4→2 (2.5배 성능 향상)
  growth: 1.5         # 2→1.5 경량화
  rescale: 0.1

# Experiment launching, distributed
ddp: false
ddp_backend: nccl
rendezvous_file: ./rendezvous

# Internal config, don't set manually
rank:
world_size:

# Hydra config
hydra:
  run:
    dir: ./outputs/exp_${hydra.job.override_dirname}
  job:
    config:
      # configuration for the ${hydra.job.override_dirname} runtime variable
      override_dirname:
        kv_sep: '='
        item_sep: ','
        # Remove all paths, as the / in them would mess up things
        # Remove params that would not impact the training itself
        # Remove all slurm and submit params.
        # This is ugly I know...
        exclude_keys: [
          'hydra.job_logging.handles.file.filename',
          'dset.train', 'dset.valid', 'dset.test', 'dset.noisy_json', 'dset.noisy_dir',
          'num_prints', 'continue_from', 'save_again',
          'device', 'num_workers', 'print_freq', 'restart', 'verbose',
          'log', 'ddp', 'ddp_backend', 'rendezvous_file', 'rank', 'world_size']
  job_logging:
    handlers:
      file:
        class: logging.FileHandler
        mode: w
        formatter: colorlog
        filename: trainer.log
      console:
        class: logging.StreamHandler
        formatter: colorlog
        stream: ext://sys.stderr

  hydra_logging:
    handlers:
      console:
        class: logging.StreamHandler
        formatter: colorlog
        stream: ext://sys.stderr